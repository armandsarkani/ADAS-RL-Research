import matplotlib.pyplot as plt
import json
import sys
import os
def load_state_counts():
    data_file = 'FastDriver_warning_frequency_data.json'
    data_path = 'Data/FastDriver/' + data_file
    state_counts = {3: [], 4: [], 5: [], 6: [], 7: [], 8: []}
    if(os.path.exists(data_path)):
        os.chdir('Data/FastDriver')
        with open(data_file) as file:
            data = json.load(file)
            i = 3
            for key in data:
                state_counts[i] = data[key] # load in state_counts dictionary if it already exists for plotting frequency graphs
                i += 1
            file.close()
        os.chdir('../..')
    return state_counts
def plot(state_counts):
    driver_name = 'FastDriver'
    for i in range(3, 9): # initialization
        state_counts[i].append(0) # add zero entry for this episode
    episode = 28
    file_name = driver_name + '_warning_frequency_plot.png'
    plt.xlabel("Iterations (x100)")
    plt.ylabel("Number of warnings")
    plt.axis([0, episode+1, 0, 10])
    plt.xticks(range(1, episode+1), rotation = 90)
    plt.yticks(range(0, 10))
    state_colors = {3: '#9EC384', 4: '#BBD5AB', 5: '#FAE6A2', 6: '#F9DB79', 7: '#DE9C9A', 8: '#D16D69'}
    #ax = plt.subplot(111)
    width = 0.1
    for x in range(1, episode+1):
        offset = 0.3
        for key in state_counts:
            y = state_counts[key][x-1]
            plt.bar(x-offset, y, width = width, color = state_colors[key], align = 'center')
            offset -= 0.1
    labels = list(state_colors.keys())
    handles = [plt.Rectangle((0,0),1,1, color=state_colors[label]) for label in labels]
    plt.legend(handles, labels, title = "Distance state D (lower is safer)", loc='best')
    plt.savefig(file_name, dpi=600)
    plt.clf()
def plot_fp_fn():
    iterations = 1000
    fp = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    fn = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    rd = [4.22, 1.34, 1.34, 1.34, 1.75, 1.75, 1.73, 1.7, 1.63, 1.54, 1.42, 1.28, 1.11, 0.92, 0.81, 1.75, 1.74, 1.69, 1.62, 1.52, 1.39, 1.23, 1.05, 0.84, 0.59, 0.41, 1.75, 1.73, 1.68, 1.6, 1.48, 1.34, 1.16, 1.01, 0.96, 1.05, 1.31, 1.75, 1.75, 1.72, 1.69, 1.65, 1.59, 1.51, 1.42, 1.3, 1.16, 1.05, 1.03, 1.12, 1.31, 1.75, 1.75, 1.74, 1.73, 1.71, 1.68, 1.65, 1.6, 1.56, 1.51, 1.45, 1.39, 1.32, 1.24, 1.18, 1.75, 1.74, 1.73, 1.7, 1.67, 1.62, 1.57, 1.51, 1.43, 1.34, 1.25, 1.14, 1.06, 1.05, 1.13, 1.27, 1.75, 1.75, 1.73, 1.7, 1.31, 1.29, 1.26, 1.22, 1.16, 1.1, 1.04, 1.04, 1.11, 1.25, 1.75, 1.75, 1.72, 1.69, 1.64, 1.57, 1.49, 1.39, 1.28, 1.16, 1.03, 0.89, 0.84, 1.75, 1.74, 1.72, 1.67, 1.62, 1.54, 1.45, 1.34, 1.21, 1.07, 0.97, 1.75, 1.74, 1.71, 1.66, 1.59, 1.51, 1.39, 1.27, 1.12, 1.0, 0.99, 1.75, 1.74, 1.7, 1.64, 1.56, 1.46, 1.33, 1.19, 1.01, 0.92, 1.75, 1.74, 1.7, 1.64, 1.55, 1.43, 1.28, 1.12, 0.96, 1.75, 1.73, 1.69, 1.61, 1.5, 1.37, 1.21, 1.02, 0.94, 1.75, 1.34, 1.3, 1.23, 1.12, 1.08, 1.26, 1.75, 1.74, 1.69, 1.6, 1.47, 1.31, 1.11, 0.95, 1.75, 1.72, 1.66, 1.55, 1.41, 1.22, 0.99, 0.73, 0.46, 0.12, 3.4, 3.5, 0.38, 0.56, 1.75, 1.73, 1.64, 1.5, 1.3, 1.03, 0.88, 1.75, 1.72, 1.62, 1.46, 1.24, 0.96, 0.62, 0.22, 0.02, 0.25, 0.55, 1.75, 1.73, 1.67, 1.57, 1.42, 1.27, 1.22, 1.14, 1.07, 1.14, 1.3, 1.75, 1.75, 1.71, 1.66, 1.58, 1.48, 1.36, 1.22, 1.05, 0.92, 1.75, 1.73, 1.7, 1.63, 1.54, 1.44, 1.3, 1.13, 1.03, 1.11, 1.3, 1.75, 1.75, 1.73, 1.7, 1.66, 1.61, 1.54, 1.46, 1.38, 1.27, 1.16, 1.05, 0.95, 1.75, 1.74, 1.72, 1.69, 1.64, 1.57, 1.5, 1.4, 1.29, 1.23, 1.75, 1.74, 1.71, 1.67, 1.6, 1.52, 1.42, 1.32, 1.25, 1.75, 1.74, 1.71, 1.66, 1.59, 1.5, 1.39, 1.27, 1.12, 1.03, 1.12, 1.31, 1.75, 1.75, 1.74, 1.71, 1.68, 1.31, 1.29, 1.27, 1.23, 1.19, 1.14, 1.1, 1.14, 1.75, 1.75, 1.73, 1.7, 1.66, 1.6, 1.53, 1.46, 1.37, 1.27, 1.15, 1.02, 0.92, 1.75, 1.74, 1.72, 1.68, 1.63, 1.56, 1.48, 1.38, 1.27, 1.16, 1.02, 0.91, 1.75, 1.74, 1.72, 1.67, 1.61, 1.53, 1.44, 1.33, 1.21, 1.07, 0.96, 1.75, 1.74, 1.71, 1.66, 1.61, 1.56, 1.46, 1.36, 1.22, 1.07, 0.98, 1.75, 1.74, 1.7, 1.64, 1.57, 1.46, 1.34, 1.2, 1.02, 0.83, 0.61, 0.36, 0.21, 0.21, 0.34, 0.55, 1.75, 1.75, 1.73, 1.7, 1.66, 1.61, 1.55, 1.48, 1.4, 1.32, 1.21, 1.27, 1.25, 1.23, 1.2, 1.16, 1.11, 1.07, 1.06, 1.1, 1.23, 1.75, 1.75, 1.73, 1.69, 1.64, 1.59, 1.52, 1.44, 1.35, 1.24, 1.12, 1.04, 1.04, 1.14, 1.3, 1.75, 1.75, 1.74, 1.73, 1.7, 1.67, 1.64, 1.59, 1.54, 1.49, 1.42, 1.35, 1.27, 1.19, 1.1, 1.02, 0.96, 1.75, 1.74, 1.73, 1.71, 1.68, 1.64, 1.59, 1.53, 1.46, 1.4, 1.33, 1.75, 1.74, 1.73, 1.7, 1.66, 1.61, 1.56, 1.49, 1.41, 1.33, 1.22, 1.12, 1.01, 0.96, 1.75, 1.74, 1.73, 1.69, 1.65, 1.59, 1.52, 1.45, 1.35, 1.24, 1.13, 1.01, 0.96, 1.75, 1.74, 1.72, 1.69, 1.64, 1.57, 1.49, 1.4, 1.3, 1.18, 1.05, 0.9, 0.74, 0.57, 0.38, 0.19, 0.0, 3.42, 3.43, 3.49, 0.1, 2.69, 1.75, 3.19, 3.39, 0.23, 0.43, 1.75, 1.75, 1.7, 1.63, 1.52, 1.38, 1.21, 1.01, 0.77, 0.49, 0.18, 0.0, 0.12, 0.41, 1.75, 1.75, 1.73, 1.7, 1.65, 1.6, 1.53, 1.45, 1.35, 1.25, 1.13, 1.05, 1.05, 1.14, 1.28, 1.75, 1.75, 1.72, 1.68, 1.63, 1.55, 1.46, 1.35, 1.23, 1.09, 0.97, 1.75, 1.74, 1.71, 1.66, 1.59, 1.5, 1.38, 1.26, 1.11, 1.0, 0.98, 1.75, 1.73, 1.69, 1.63, 1.54, 1.43, 1.31, 1.15, 0.98, 0.79, 0.57, 0.34, 0.13, 0.06, 0.15, 0.4, 1.75, 1.75, 1.74, 1.72, 1.7, 1.32, 1.3, 1.28, 1.25, 1.22, 1.18, 1.13, 1.09, 1.12, 1.19, 1.75, 1.75, 1.74, 1.71, 1.68, 1.64, 1.59, 1.53, 1.46, 1.37, 1.28, 1.17, 1.06, 0.96, 1.75, 1.74, 1.72, 1.69, 1.65, 1.59, 1.53, 1.45, 1.37, 1.26, 1.15, 1.02, 0.91, 1.75, 1.74, 1.72, 1.68, 1.63, 1.56, 1.48, 1.39, 1.28, 1.15, 1.01, 0.92, 1.75, 1.74, 1.71, 1.66, 1.6, 1.51, 1.41, 1.28, 1.13, 1.01, 1.75, 1.74, 1.7, 1.64, 1.56, 1.47, 1.35, 1.2, 1.03, 0.92, 1.75, 1.74, 1.7, 1.63, 1.54, 1.42, 1.28, 1.11, 0.92, 0.71, 0.46, 0.19, 3.49, 3.5, 0.2, 0.41, 2.44, 1.99, 1.31, 1.72, 0.7, 0.67, 0.63, 0.56, 0.47, 0.35, 0.27, 0.3, 0.51, 1.75, 1.75, 1.71, 1.65, 1.57, 1.46, 1.32, 1.15, 0.97, 0.76, 0.52, 0.3, 0.21, 0.27, 0.44, 0.7, 1.75, 1.75, 1.74, 1.71, 1.67, 1.63, 1.57, 1.51, 1.43, 1.35, 1.25, 1.14, 1.06, 1.02, 1.02, 1.08, 1.17, 1.75, 1.75, 1.73, 1.7, 1.66, 1.6, 1.53, 1.45, 1.37, 1.26, 1.14, 1.07, 1.1, 1.23, 1.75, 1.75, 1.72, 1.69, 1.63, 1.57, 1.49, 1.39, 1.28, 1.16, 1.02, 0.9, 1.75, 1.74, 1.72, 1.67, 1.61, 1.54, 1.45, 1.33, 1.2, 1.07, 0.95, 1.75, 1.74, 1.33, 1.32, 1.29, 1.24, 1.18, 1.1, 1.03, 1.03, 1.14, 1.3, 1.55, 1.76, 1.74, 1.72, 1.69, 1.65, 1.6, 1.53, 1.46, 1.38, 1.28, 1.19, 1.75, 1.74, 1.72, 1.69, 1.64, 1.59, 1.52, 1.44, 1.35, 1.25, 1.13, 1.02, 0.98, 1.75, 1.74, 1.71, 1.67, 1.6, 1.53, 1.44, 1.34, 1.21, 1.07, 0.96, 1.75, 1.74, 1.71, 1.66, 1.6, 1.51, 1.4, 1.28, 1.21, 1.75, 1.74, 1.71, 1.65, 1.57, 1.48, 1.35, 1.21, 1.04, 0.95, 1.75, 1.73, 1.69, 1.62, 1.53, 1.41, 1.27, 1.11, 1.0, 1.06, 1.26, 1.75, 1.74, 1.7, 1.31, 1.27, 1.2, 1.1, 1.06, 1.75, 1.73, 1.68, 1.6, 1.49, 1.34, 1.17, 0.95, 0.72, 0.44, 0.14, 3.45, 0.02, 0.32, 0.56, 1.75, 1.73, 1.65, 1.53, 1.34, 1.12, 0.83, 0.5, 0.12, 3.31, 3.24, 3.37, 0.27, 0.58, 1.75, 1.72, 1.59, 1.39, 1.09, 0.93, 1.75, 1.7, 1.56, 1.33, 1.01, 1.05, 1.31, 1.75, 1.68, 1.25, 1.05, 1.31, 1.75, 1.74, 1.67, 1.55, 1.39, 1.19, 0.94, 0.66, 0.34, 0.13, 0.2, 0.41, 1.75, 1.74, 1.7, 1.64, 1.55, 1.45, 1.32, 1.16, 0.99, 0.79, 0.58, 0.33, 0.17, 0.21, 0.31, 0.5, 1.75, 1.74, 1.7, 1.64, 1.55, 1.43, 1.28, 1.12, 1.01, 1.09, 1.3, 1.76, 1.75, 1.73, 1.7, 1.65, 1.59, 1.53, 1.44, 1.35, 1.24, 1.13, 1.01, 0.94, 1.75, 1.74, 1.71, 1.67, 1.61, 1.54, 1.45, 1.36, 1.24, 1.26, 1.24, 1.21, 1.15, 1.09, 1.04, 1.08, 1.22, 1.75, 1.74, 1.7, 1.64, 1.57, 1.49, 1.38, 1.25, 1.1, 0.93, 0.75, 0.55, 0.33, 0.12, 0.01, 0.06, 0.27, 0.56, 1.75, 1.75, 1.74, 1.72, 1.7, 1.66, 1.62, 1.57, 1.51, 1.44, 1.36, 1.28, 1.19, 1.09, 1.0, 0.97, 1.75, 1.74, 1.73, 1.7, 1.67, 1.63, 1.57, 1.5, 1.43, 1.34, 1.25, 1.15, 1.04, 0.95, 1.75, 1.74, 1.72, 1.69, 1.64, 1.58, 1.51, 1.42, 1.33, 1.22, 1.1, 1.0, 0.96, 1.75, 1.74, 1.72, 1.69, 1.64, 1.57, 1.49, 1.4, 1.3, 1.17, 1.05, 0.95, 1.75, 1.74, 1.72, 1.68, 1.62, 1.54, 1.45, 1.28, 1.25]
    driver_name = 'DrowsyDriver'
    # false positives plot
    f = plt.figure()
    f.set_figwidth(10)
    f.set_figheight(2)
    #plt.axis([1, client.local_episode_num+1, 0, 1])
    #plt.xticks(range(1, client.local_episode_num+1))
    plt.axis([1, iterations, 0, 1])
    plt.xticks(range(0, iterations, int(iterations/10)), fontsize=12, fontweight='bold')
    plt.yticks(range(0, 1), fontsize=12, fontweight='bold')
    file_name = driver_name + '_FP.png'
    plt.xlabel("Iterations", fontsize=12, fontweight='bold')
    plt.ylabel("FP", fontsize=12, fontweight='bold')
    width = 0.5
    x_axis = []
    for i in range(0, len(fp)):
        x_axis.append(i)
        #offset = 0.125
        #for j in range(0, iterations):
            #plt.bar(i-offset, client.false_positives[i][j], color = '#360CF2', width = width, align = 'center')
            #offset -= 0.0125
    plt.bar(x_axis, fp, color = '#360CF2', width = width, align = 'center')
    plt.savefig(file_name, dpi=600, bbox_inches='tight')
    plt.clf()
    # false negatives plot
    f = plt.figure()
    f.set_figwidth(10)
    f.set_figheight(2)
    #plt.axis([1, client.local_episode_num+1, 0, 1])
    #plt.xticks(range(1, client.local_episode_num+1))
    plt.axis([1, iterations, 0, 1])
    plt.xticks(range(0, iterations, int(iterations/10)), fontsize=12, fontweight='bold')
    plt.yticks(range(0, 1), fontsize=12, fontweight='bold')
    file_name = driver_name + '_FN.png'
    plt.xlabel("Iterations", fontsize=12, fontweight='bold')
    plt.ylabel("FN", fontsize=12, fontweight='bold')
    width = 0.5
    x_axis = []
    for i in range(0, len(fn)):
        x_axis.append(i)
        #offset = 0.125
        #for j in range(0, iterations):
            #plt.bar(i-offset, client.false_positives[i][j], color = '#360CF2', width = width, align = 'center')
            #offset -= 0.0125
    plt.bar(x_axis, fn, color = '#FC0317', width = width, align = 'center')
    plt.savefig(file_name, dpi=600, bbox_inches='tight')
    plt.clf()
    # right distance (rd) plot
    f = plt.figure()
    f.set_figwidth(10)
    f.set_figheight(2)
    #plt.axis([1, client.local_episode_num+1, 2.5, 0])
    #plt.xticks(range(1, client.local_episode_num+1))
    #plt.yticks([0, 0.5, 1, 1.5, 2, 2.5])
    plt.axis([1, iterations, 0, 1])
    plt.xticks(range(0, iterations, int(iterations/10)), fontsize=12, fontweight='bold')
    plt.yticks([0, 0.5, 1, 1.5, 2, 2.5], fontsize=12, fontweight='bold')
    file_name = driver_name + '_RD.png'
    plt.xlabel("Iterations", fontsize=12, fontweight='bold')
    plt.ylabel("RD", fontsize=12, fontweight='bold')
    x_axis = []
    for i in range(0, len(rd)):
        #x_axis.append((i/iterations)+1)
        x_axis.append(i)
    plt.plot(x_axis, rd, '-g')
    plt.savefig(file_name, dpi=600, bbox_inches='tight')
    plt.clf()
    plt.close('all')
    os.chdir('../..')
plot_fp_fn()
#plot(load_state_counts())
